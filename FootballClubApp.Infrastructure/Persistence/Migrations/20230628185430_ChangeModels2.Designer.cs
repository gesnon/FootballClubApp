// <auto-generated />
using System;
using FootballClubApp.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FootballClubApp.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(FootballClubAppContext))]
    [Migration("20230628185430_ChangeModels2")]
    partial class ChangeModels2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.8");

            modelBuilder.Entity("FootballClubApp.Domain.Entities.FanClub", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClubId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FanId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.HasIndex("FanId");

                    b.ToTable("FanClubs");
                });

            modelBuilder.Entity("FootballClubApp.Domain.Entities.FootballClub", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FootballClubs");
                });

            modelBuilder.Entity("FootballClubApp.Domain.Entities.FootballFan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FootballFans");
                });

            modelBuilder.Entity("FootballClubApp.Domain.Entities.FootballPlayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Birth")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ClubId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SNILS")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.ToTable("FootballPlayers");
                });

            modelBuilder.Entity("FootballClubApp.Domain.Entities.FanClub", b =>
                {
                    b.HasOne("FootballClubApp.Domain.Entities.FootballClub", "Club")
                        .WithMany()
                        .HasForeignKey("ClubId");

                    b.HasOne("FootballClubApp.Domain.Entities.FootballFan", "Fan")
                        .WithMany("FollowClubs")
                        .HasForeignKey("FanId");

                    b.Navigation("Club");

                    b.Navigation("Fan");
                });

            modelBuilder.Entity("FootballClubApp.Domain.Entities.FootballPlayer", b =>
                {
                    b.HasOne("FootballClubApp.Domain.Entities.FootballClub", "Club")
                        .WithMany()
                        .HasForeignKey("ClubId");

                    b.Navigation("Club");
                });

            modelBuilder.Entity("FootballClubApp.Domain.Entities.FootballFan", b =>
                {
                    b.Navigation("FollowClubs");
                });
#pragma warning restore 612, 618
        }
    }
}
